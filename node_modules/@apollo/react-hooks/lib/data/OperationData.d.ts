import { ApolloClient } from 'apollo-client';
import { ApolloContextValue, DocumentType } from '@apollo/react-common';
import { DocumentNode } from 'graphql';
import { CommonOptions } from '../types';
export declare abstract class OperationData<TOptions = any> {
    private _isMounted;
    private _options;
    private _previousOptions;
    private _context;
    private _client;
    constructor(options?: CommonOptions<TOptions>, context?: ApolloContextValue);
    isMounted: boolean;
    options: CommonOptions<TOptions>;
    previousOptions: CommonOptions<TOptions>;
    context: ApolloContextValue;
    client: ApolloClient<object> | undefined;
    abstract execute(...args: any): any;
    abstract afterExecute(...args: any): () => void;
    protected abstract cleanup(): void;
    protected unmount(): void;
    protected refreshClient(): {
        client: ApolloClient<object>;
        isNew: boolean;
    };
    protected verifyDocumentType(document: DocumentNode, type: DocumentType): void;
}
